(declare-fun main@verifier.error_0 () Bool)
(declare-fun |tuple(main@entry_0, main@verifier.error_0)| () Bool)
(declare-fun main@%_1_0 () (_ BitVec 8))
(declare-fun main@%_0_0 () (_ BitVec 8))
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@entry_0 () Bool)
(declare-fun main@_2_0 () Bool)
(declare-fun sea.sp0_0 () (_ BitVec 64))

(assert (and (= #b000 ((_ extract 2 0) sea.sp0_0))
     (bvule sea.sp0_0 #x00000000c0000000)
     (bvuge sea.sp0_0 #x00000000bf700000)
     (=> main@_2_0 (and main@_2_0 main@entry_0))
     (=> (and main@_2_0 main@entry_0) (= main@%_0_0 #x00))
     (=> main@_2_0 (not (= main@%_1_0 #x00)))
     (=> |tuple(main@entry_0, main@verifier.error_0)| main@entry_0)
     (=> main@verifier.error_0
         (or (and main@verifier.error_0 main@_2_0)
             |tuple(main@entry_0, main@verifier.error_0)|))
     (=> |tuple(main@entry_0, main@verifier.error_0)| (not (= main@%_0_0 #x00)))
     (=> main@verifier.error.split_0
         (and main@verifier.error.split_0 main@verifier.error_0))
     main@verifier.error.split_0))
(check-sat)
